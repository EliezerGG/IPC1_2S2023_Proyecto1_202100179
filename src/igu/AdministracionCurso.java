package igu;

import java.util.Comparator;
import java.util.List;
import java.util.stream.Collectors;

import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.element.Table;
import java.io.FileNotFoundException;
import java.io.IOException;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;


import static igu.LogIn.profesorLogged;
import static igu.MenuProfesor.fcPindex;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import proyecto1courses.Controladora;
import static proyecto1courses.Controladora.cursosArray;
import static proyecto1courses.Controladora.estudiantesArray;
import proyecto1courses.Course;
import proyecto1courses.HomeWork;
import proyecto1courses.Student;

public class AdministracionCurso extends javax.swing.JFrame {

    Controladora control = new Controladora();
    ArrayList<Student> studentsForThisCourse =new ArrayList<>();
    public static DefaultTableModel modeloStudent = new DefaultTableModel();
    DefaultTableModel modeloHomeWork = new DefaultTableModel();
    
    int totalPonderacion = 0;
    public static int fStudentProf = 0;
    
    public AdministracionCurso() {
        initComponents();



        
        if (modeloStudent.getColumnCount() == 0) {
            modeloStudent.addColumn("Codigo");
            modeloStudent.addColumn("Nombre");
            modeloStudent.addColumn("Apellido");
        }
        
        if (modeloHomeWork.getColumnCount() == 0) {
            modeloHomeWork.addColumn("Nombre");
            modeloHomeWork.addColumn("Descripcion");
            modeloHomeWork.addColumn("Ponderacion");
            modeloHomeWork.addColumn("Promedio");
        }
        
        refreshTable();
    }

    public void refreshTable(){
        tblStudentsCourse.setModel(modeloStudent);
        tblHomeWork.setModel(modeloHomeWork);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblNameCourse = new javax.swing.JLabel();
        labelSaludar1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStudentsCourse = new javax.swing.JTable();
        btnCargaMasivaStudent = new javax.swing.JButton();
        btnTopBest = new javax.swing.JButton();
        btnAddActivity = new javax.swing.JButton();
        btnNotasCSV = new javax.swing.JButton();
        labelSaludar2 = new javax.swing.JLabel();
        btnTopWrost = new javax.swing.JButton();
        labelSaludar3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblHomeWork = new javax.swing.JTable();
        lblAcumulado = new javax.swing.JLabel();
        labelSaludar5 = new javax.swing.JLabel();
        labelSaludar6 = new javax.swing.JLabel();
        labelSaludar7 = new javax.swing.JLabel();
        labelSaludar8 = new javax.swing.JLabel();
        labelSaludar9 = new javax.swing.JLabel();
        txtNameActivity = new javax.swing.JTextField();
        txtDescActivity = new javax.swing.JTextField();
        txtPonderacion = new javax.swing.JTextField();
        btnExit = new javax.swing.JButton();
        btnShowInfoStudent = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(23, 107, 135));

        lblNameCourse.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        lblNameCourse.setForeground(new java.awt.Color(255, 255, 255));
        lblNameCourse.setText("insertar nombre Curso");

        labelSaludar1.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        labelSaludar1.setForeground(new java.awt.Color(255, 255, 255));
        labelSaludar1.setText("Listado Alumnos");

        tblStudentsCourse.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblStudentsCourse);

        btnCargaMasivaStudent.setBackground(new java.awt.Color(0, 28, 48));
        btnCargaMasivaStudent.setForeground(new java.awt.Color(255, 255, 255));
        btnCargaMasivaStudent.setText("Carga Masiva Alumnos");
        btnCargaMasivaStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargaMasivaStudentActionPerformed(evt);
            }
        });

        btnTopBest.setBackground(new java.awt.Color(0, 28, 48));
        btnTopBest.setForeground(new java.awt.Color(255, 255, 255));
        btnTopBest.setText("Top 5 - Estudiantes con Mejor Rendimiento");
        btnTopBest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTopBestActionPerformed(evt);
            }
        });

        btnAddActivity.setBackground(new java.awt.Color(0, 28, 48));
        btnAddActivity.setForeground(new java.awt.Color(255, 255, 255));
        btnAddActivity.setText("Crear Actividad");
        btnAddActivity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActivityActionPerformed(evt);
            }
        });

        btnNotasCSV.setBackground(new java.awt.Color(0, 28, 48));
        btnNotasCSV.setForeground(new java.awt.Color(255, 255, 255));
        btnNotasCSV.setText("Seleccinar Archivo CSV");
        btnNotasCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNotasCSVActionPerformed(evt);
            }
        });

        labelSaludar2.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        labelSaludar2.setForeground(new java.awt.Color(255, 255, 255));
        labelSaludar2.setText("Reportes");

        btnTopWrost.setBackground(new java.awt.Color(0, 28, 48));
        btnTopWrost.setForeground(new java.awt.Color(255, 255, 255));
        btnTopWrost.setText("Top 5 - Estudiantes con Peor  Rendimiento");
        btnTopWrost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTopWrostActionPerformed(evt);
            }
        });

        labelSaludar3.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        labelSaludar3.setForeground(new java.awt.Color(255, 255, 255));
        labelSaludar3.setText("Actividades");

        tblHomeWork.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblHomeWork);

        lblAcumulado.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        lblAcumulado.setForeground(new java.awt.Color(255, 255, 255));
        lblAcumulado.setText("Mostrar Acumlado");

        labelSaludar5.setFont(new java.awt.Font("Verdana", 2, 12)); // NOI18N
        labelSaludar5.setForeground(new java.awt.Color(255, 255, 255));
        labelSaludar5.setText("Crear Actividad");

        labelSaludar6.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        labelSaludar6.setForeground(new java.awt.Color(255, 255, 255));
        labelSaludar6.setText("Nombre:");

        labelSaludar7.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        labelSaludar7.setForeground(new java.awt.Color(255, 255, 255));
        labelSaludar7.setText("Descripcion:");

        labelSaludar8.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        labelSaludar8.setForeground(new java.awt.Color(255, 255, 255));
        labelSaludar8.setText("Ponderacion:");

        labelSaludar9.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        labelSaludar9.setForeground(new java.awt.Color(255, 255, 255));
        labelSaludar9.setText("Notas:");

        txtNameActivity.setBackground(new java.awt.Color(255, 255, 255));
        txtNameActivity.setForeground(new java.awt.Color(0, 0, 0));
        txtNameActivity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActivityActionPerformed(evt);
            }
        });

        txtDescActivity.setBackground(new java.awt.Color(255, 255, 255));
        txtDescActivity.setForeground(new java.awt.Color(0, 0, 0));

        txtPonderacion.setBackground(new java.awt.Color(255, 255, 255));
        txtPonderacion.setForeground(new java.awt.Color(0, 0, 0));

        btnExit.setBackground(new java.awt.Color(23, 107, 135));
        btnExit.setForeground(new java.awt.Color(255, 255, 255));
        btnExit.setText("Salir");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        btnShowInfoStudent.setBackground(new java.awt.Color(100, 204, 197));
        btnShowInfoStudent.setForeground(new java.awt.Color(0, 28, 48));
        btnShowInfoStudent.setText("Ver info Estudiante");
        btnShowInfoStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowInfoStudentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnExit)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblNameCourse)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(labelSaludar1)
                            .addComponent(labelSaludar2)
                            .addComponent(btnTopBest, javax.swing.GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE)
                            .addComponent(btnCargaMasivaStudent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(btnTopWrost, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnShowInfoStudent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelSaludar5)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(labelSaludar7)
                                            .addGap(56, 56, 56)
                                            .addComponent(txtDescActivity))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(labelSaludar6)
                                            .addGap(81, 81, 81)
                                            .addComponent(txtNameActivity))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(labelSaludar8)
                                            .addGap(51, 51, 51)
                                            .addComponent(txtPonderacion, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(labelSaludar9))
                                .addGap(116, 116, 116))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblAcumulado)
                                            .addGap(29, 29, 29))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(labelSaludar3)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(btnNotasCSV, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                                            .addComponent(btnAddActivity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(85, 85, 85)))
                                .addGap(31, 31, 31))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(lblNameCourse)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(labelSaludar5)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelSaludar6)
                            .addComponent(txtNameActivity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelSaludar7)
                            .addComponent(txtDescActivity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelSaludar8)
                            .addComponent(txtPonderacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnNotasCSV)
                            .addComponent(labelSaludar9))
                        .addGap(18, 18, 18)
                        .addComponent(btnAddActivity))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(labelSaludar1)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnCargaMasivaStudent)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnShowInfoStudent)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelSaludar2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnTopBest, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addComponent(btnTopWrost, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(labelSaludar3)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblAcumulado)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(btnExit)
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTopWrostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTopWrostActionPerformed
     // TODO add your handling code here:
        try {
           File file = new File("Peores 5 estudiantes.pdf");
           PdfWriter pdfWriter = new PdfWriter(file);          
           
           PdfDocument pdfDocument = new PdfDocument(pdfWriter);
           
           Document document = new Document(pdfDocument);
           
            int i = 1;
            Table table = new Table(6);  // 5 columnas para code, name, lastName, email y gender
            table.addCell("Posicion");
            table.addCell("Codigo");
            table.addCell("Nombre");
            table.addCell("Apellido");
            table.addCell("Correo");
            table.addCell("Nota Acumulada");
            
            List<Student> bestStudents = studentsForThisCourse.stream()
                    .sorted(Comparator.comparingDouble((Student estudiante) -> estudiante.obtenerNota(profesorLogged.getCursosProfArray().get(fcPindex)))).limit(5).collect(Collectors.toList());
                               
                              
                        
           for (Student estudiante: bestStudents){
                table.addCell(String.valueOf(i));
                table.addCell(estudiante.getCodeStudet());
                table.addCell(estudiante.getNameStudet());
                table.addCell(estudiante.getLastNameStudent());
                table.addCell(estudiante.getEmailStudent());
               table.addCell(String.valueOf(estudiante.obtenerNota(profesorLogged.getCursosProfArray().get(fcPindex))));
                i++;
           }
          
          document.add(table);
          document.close();
          
          pdfWriter.close();
          
            System.out.println("PDF Creado");
            JOptionPane.showMessageDialog(null, "PDF Creado");
             
        } catch (FileNotFoundException ex) {
            System.out.println(ex.getMessage());
        } catch(IOException ex){
            System.out.println(ex.getMessage());
        }
        
        
    }//GEN-LAST:event_btnTopWrostActionPerformed

    private void btnNotasCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNotasCSVActionPerformed
        // TODO add your handling code here:
        JFileChooser javaChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos csv", "csv");
        
        javaChooser.setFileFilter(filter);
        int select = javaChooser.showOpenDialog(this);
        
        javaChooser.setMultiSelectionEnabled(false);
        
        if (select == JFileChooser.APPROVE_OPTION) {
            File selectedFile = javaChooser.getSelectedFile();
            
           loadFileTarea(selectedFile);
        
        }     
    }//GEN-LAST:event_btnNotasCSVActionPerformed

    public void loadFileTarea(File archivo){
        
        FileReader fr = null;
        BufferedReader br = null;
        
       try {
            fr = new FileReader(archivo);
            br = new BufferedReader(fr);
            
            String line;
            String nameHW = txtNameActivity.getText();
            String descripHW = txtDescActivity.getText();
            int ponderacion = Integer.valueOf(txtPonderacion.getText());
            double sumaNotas = 0;
            int cantNotas = 0; 
            int averegeNotas = 0;
            ArrayList<Double> notasArray = new ArrayList<>();
            
            totalPonderacion = ponderacion + totalPonderacion;
            
        if (totalPonderacion >100) {
            JOptionPane.showMessageDialog(null, "No se puede agregar mas tarea, total excedido");

        }else{
            
            while((line = br.readLine()) != null){
                String [] arreglo = line.split(",");
                if (arreglo.length >=2) {
                    notasArray.add(Double.valueOf(arreglo[1]));
                    for(Student estudiante : studentsForThisCourse){
                        if (estudiante.getCodeStudet().equals(arreglo[0])) {
                            
//                            estudiante.getCursosEstudiante().get(0).addHomeWorkToStudent(nameHW, descripHW,
//                                    ponderacion, Double.valueOf(arreglo[1]), estudiante);
                            
                System.out.println( profesorLogged.getCursosProfArray().get(fcPindex).getTareasArrayProfesor().size());
                estudiante.addCourseAndNote(profesorLogged.getCursosProfArray().get(fcPindex), Double.valueOf(arreglo[1]));
                            
        for (Course curso : estudiante.getCursosEstudiante()) {
            if (curso == profesorLogged.getCursosProfArray().get(fcPindex)) {
                curso.addHomeWorkToStudent(nameHW, descripHW, ponderacion, Double.valueOf(arreglo[1]), estudiante);
            }
        }
               
                        }
                    }
                                        
                }
            }
        lblAcumulado.setText(totalPonderacion+"/100");      
        cantNotas = notasArray.size();
        for(double nota: notasArray){
            sumaNotas += nota;
        }
        averegeNotas = (int) ((sumaNotas) /cantNotas);

        profesorLogged.getCursosProfArray().get(fcPindex).addHomeWorkToCourse(nameHW,descripHW,
                ponderacion, averegeNotas);

        System.out.println( profesorLogged.getCursosProfArray().get(fcPindex).getTareasArrayProfesor().size());
        loadTableTarea();    
            
        }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "No se puede agregar mas tarea, total excedido");
        }

    }
    
    public void loadTableTarea(){
        while (modeloHomeWork.getRowCount() > 0) { 
            modeloHomeWork.removeRow(0);
        }
        
        for (HomeWork tarea: profesorLogged.getCursosProfArray().get(fcPindex).getTareasArrayProfesor()) {
            if (tarea != null) {
                Object a[]= new Object[4];
                a[0] = tarea.getNameHW();
                a[1] = tarea.getDescripHW();
                a[2] = tarea.getPonderacionHW();
                a[3] = tarea.getAverageHW();

                modeloHomeWork.addRow(a);
            }
        }
    
    }
    
    private void btnAddActivityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActivityActionPerformed
        // TODO add your handling code here:
        int ponderacion =Integer.valueOf(txtPonderacion.getText()) ;
        
        
        totalPonderacion = ponderacion + totalPonderacion;
        lblAcumulado.setText(totalPonderacion+"/100");
        
    }//GEN-LAST:event_btnAddActivityActionPerformed

    private void btnTopBestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTopBestActionPerformed
        // TODO add your handling code here:
        try {
           File file = new File("Mejores 5 estudiantes.pdf");
           PdfWriter pdfWriter = new PdfWriter(file);          
           
           PdfDocument pdfDocument = new PdfDocument(pdfWriter);
           
           Document document = new Document(pdfDocument);
          
           int i = 1;
            Table table = new Table(6);  // 5 columnas para code, name, lastName, email y gender
            table.addCell("Posicion");
            table.addCell("Codigo");
            table.addCell("Nombre");
            table.addCell("Apellido");
            table.addCell("Correo");
            table.addCell("Nota Acumulada");
            
            List<Student> bestStudents = studentsForThisCourse.stream()
                    .sorted(Comparator.comparingDouble((Student estudiante) -> estudiante.obtenerNota(profesorLogged.getCursosProfArray().get(fcPindex))).reversed()).limit(5).collect(Collectors.toList());
                               
                              
                        
    for (Student estudiante: bestStudents){
         table.addCell(String.valueOf(i));
         table.addCell(estudiante.getCodeStudet());
         table.addCell(estudiante.getNameStudet());
         table.addCell(estudiante.getLastNameStudent());
         table.addCell(estudiante.getEmailStudent());
        table.addCell(String.valueOf(estudiante.obtenerNota(profesorLogged.getCursosProfArray().get(fcPindex))));
         i++;
    }
          
          document.add(table);
          document.close();
          
          pdfWriter.close();
          
            System.out.println("PDF Creado");
            JOptionPane.showMessageDialog(null, "PDF Creado");
            
        } catch (FileNotFoundException ex) {
            System.out.println(ex.getMessage());
        } catch(IOException ex){
            System.out.println(ex.getMessage());
        }
        
        
    }//GEN-LAST:event_btnTopBestActionPerformed

    private void txtNameActivityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActivityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActivityActionPerformed

    private void btnCargaMasivaStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargaMasivaStudentActionPerformed
        // TODO add your handling code here:
       JFileChooser javaChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos csv", "csv");
        
        javaChooser.setFileFilter(filter);
        int select = javaChooser.showOpenDialog(this);
        
        javaChooser.setMultiSelectionEnabled(false);
        
        if (select == JFileChooser.APPROVE_OPTION) {
            File selectedFile = javaChooser.getSelectedFile();
            
           loadFileStudent(selectedFile);
        
        } 
        control.saveData();
    }//GEN-LAST:event_btnCargaMasivaStudentActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        control.saveData();
        dispose();
        
    }//GEN-LAST:event_btnExitActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        lblNameCourse.setText(profesorLogged.getCursosProfArray().get(fcPindex).getNameCourse());
        loadTableStudent();
        loadTableTarea();
    }//GEN-LAST:event_formWindowOpened

    private void btnShowInfoStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowInfoStudentActionPerformed
        // TODO add your handling code here:
        
        int selectedRowStudent = tblStudentsCourse.getSelectedRow();
        
        if (selectedRowStudent != -1) {
            ShowInformation infoStudent = new ShowInformation();
 
            infoStudent.setVisible(true);
            infoStudent.setLocationRelativeTo(null);
            fStudentProf = selectedRowStudent;
        }else{
            JOptionPane.showMessageDialog(null, "Seleccione una fila");
        }
    }//GEN-LAST:event_btnShowInfoStudentActionPerformed

    public void loadFileStudent(File archivo){
        
        FileReader fr = null;
        BufferedReader br = null;
                 
        try {
            fr = new FileReader(archivo);
            br = new BufferedReader(fr);
            
            String line;
            
            while((line = br.readLine()) != null){
                String [] arreglo = line.split(",");
                if (arreglo.length >=1) {                                
                    for(Student estudiante: estudiantesArray){
                        if (estudiante.getCodeStudet().equals(arreglo[0])) {
                             profesorLogged.getCursosProfArray().get(fcPindex).addStudentsToCourse(estudiante);
                             
                             studentsForThisCourse.add(estudiante);
                             estudiante.addCourseToStudent(profesorLogged.getCursosProfArray().get(fcPindex));
                             System.out.println( profesorLogged.getCursosProfArray().get(fcPindex).getStudentCount());

                            for(Course curso : cursosArray){
                                if (profesorLogged.getCursosProfArray().get(fcPindex).getCodeCourse()
                                        .equals(curso.getCodeCourse())) {
                                     curso.addStudentsToCourse(estudiante);                                    
                                }
                            }
                        }
                        
                    }                            
                }
            }
            loadTableStudent();
        } catch (Exception e) {
        }
    }
    
    public void loadTableStudent(){
        while (modeloStudent.getRowCount() > 0) { 
            modeloStudent.removeRow(0);
        }
        
        for (Student estudianteCurso: profesorLogged.getCursosProfArray().get(fcPindex).getStudentsArray()) {
            if (estudianteCurso != null) {
                Object a[]= new Object[3];
                a[0] = estudianteCurso.getCodeStudet();
                a[1] = estudianteCurso.getNameStudet();
                a[2] = estudianteCurso.getLastNameStudent();

                modeloStudent.addRow(a);
            }
        }
    
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdministracionCurso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdministracionCurso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdministracionCurso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdministracionCurso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdministracionCurso().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddActivity;
    private javax.swing.JButton btnCargaMasivaStudent;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnNotasCSV;
    private javax.swing.JButton btnShowInfoStudent;
    private javax.swing.JButton btnTopBest;
    private javax.swing.JButton btnTopWrost;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public static javax.swing.JLabel labelSaludar1;
    public static javax.swing.JLabel labelSaludar2;
    public static javax.swing.JLabel labelSaludar3;
    public static javax.swing.JLabel labelSaludar5;
    public static javax.swing.JLabel labelSaludar6;
    public static javax.swing.JLabel labelSaludar7;
    public static javax.swing.JLabel labelSaludar8;
    public static javax.swing.JLabel labelSaludar9;
    public static javax.swing.JLabel lblAcumulado;
    public static javax.swing.JLabel lblNameCourse;
    private javax.swing.JTable tblHomeWork;
    public static javax.swing.JTable tblStudentsCourse;
    private javax.swing.JTextField txtDescActivity;
    private javax.swing.JTextField txtNameActivity;
    private javax.swing.JTextField txtPonderacion;
    // End of variables declaration//GEN-END:variables
}
